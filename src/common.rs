/// Number of messages sent on a single cipher stream before the keys are rotated forward.
pub const ROTATION_INTERVAL: u32 = 1000;

/// The precise instantiation of the Noise protocol handshake at the center of Brontide.
/// This is used as part of the prologue, so must be included with all implementations.
pub const PROTOCOL_NAME: &str = "Noise_XK_secp256k1_ChaChaPoly_SHA256";

/// The noise prologue that is used to initalize the brontide noise handshake.
pub const PROLOGUE: &str = "hns";

/// Expected version of the brontide handshake. Messages with differing handshake versions are
/// immediately aborted.
pub const VERSION: u8 = 0;

/// Amount of bytes in the packet sent from the initiator to the responder in act one. Consists of
/// the handshake version, an ephemeral key in compressed format, and a 16-byte poly1305 tag.
/// 1 (Version) + 33 (Key) + 16 (Tag)
pub const ACT_ONE_SIZE: usize = 80;

/// Amount of bytes in the packet sent from the responder to the initiator in act two. Consists of
/// the handshake version, an ephemeral key in compressed format, and a 16-byte poly1305 tag.
/// 1 (Version) + 33 (Key) + 16 (Tag)
pub const ACT_TWO_SIZE: usize = 80;

/// Amount of bytes in the packet sent from the initiator to the responder in act three. Consists of
/// the handshake version, the initiator's static key encrypted with strong forward secrecy, and two 16-byte poly1305 tags.
/// 1 (Version) 16 (Tag 1) + 33 (Key) + 16 (Tag 2)
pub const ACT_THREE_SIZE: usize = 65;

///The number of bytes of the tag generated by poly1305.
pub const TAG_SIZE: usize = 16;

///The number of bytes in the header of a packet.
pub const HEADER_SIZE: usize = 20;
